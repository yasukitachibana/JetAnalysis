#include "Charged.h"

//===========================================================================================================================
// BASE
//===========================================================================================================================
// Initialize static MakeUniqueHelper.here
Pythia8::Pythia ChargedBase::InternalHelperPythia("IntentionallyEmpty", false);

bool ChargedBase::ChargedCheck(std::shared_ptr<Particle> p)
{
  double charge = InternalHelperPythia.particleData.charge(p->pid());
  if (fabs(charge) > 0.0001 /* min. value of charge */)
  {
    return true;
  }
  else
  {
    return false;
  }
}
//===========================================================================================================================

//===========================================================================================================================
// (Simple) Charged Class
//===========================================================================================================================
bool ChargedOnly::Trigger(std::shared_ptr<Particle> p)
{
  return ChargedCheck(p);
}
//===========================================================================================================================
